name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  UV_VERSION: "0.6.6"

jobs:
  lint:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
        with:
          version: "${{ env.UV_VERSION }}"
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Install dependencies
        run: |-
          uv sync --all-extras --all-groups --locked
          echo "$(pwd)/.venv/bin" >> $GITHUB_PATH

      - name: Run lint
        run: |-
          ruff check . --output-format=github
          ruff format . --check

  test:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
        with:
          version: "${{ env.UV_VERSION }}"
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Install dependencies
        run: |-
          uv sync --all-extras --all-groups --locked
          echo "$(pwd)/.venv/bin" >> $GITHUB_PATH

      - name: Run tests
        run: |-
          python -m pytest

  publish:
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref }}
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Install uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
        with:
          version: "${{ env.UV_VERSION }}"
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Update requirements.txt
        run: >-
          uv export
          --locked
          --no-dev
          --no-emit-project
          --no-hashes
          --output-file requirements.txt

      - name: Publish
        run: |-
          set -o pipefail

          if git diff --quiet --exit-code -- flock requirements.txt
          then
            echo "No changes to publish"
            exit 0
          fi

          CURRENT_VERSION="$(uv version --short)"
          NEW_VERSION="$(uv version --bump stable --short 2>/dev/null || uv version --bump patch --short)"
          git add requirements.txt pyproject.toml uv.lock
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git commit -m "[skip ci] Bump version: ${CURRENT_VERSION} â†’ ${NEW_VERSION}"
          git push
          git tag "v${NEW_VERSION}"
          git push --tags
